{"version":3,"sources":["components/Section/Section.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","className","Feedback","options","onLeaveFeedback","map","option","idx","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","App","state","onFeedback","event","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","keys","Object","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAGe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,oCACI,qBAAIC,UAAU,QAAd,cAAyBF,KACxBC,KCHE,SAASE,EAAT,GAAgD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAExC,OACI,cAACN,EAAD,CAASC,MAAM,wBAAf,SACR,mCACSI,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACb,wBAAkBC,KAAK,SACvBC,KAAMH,EAAQI,QAASN,EADvB,SAGGE,GAHUC,U,MCLN,SAASI,EAAT,GAAmE,IAA7CC,EAA4C,EAA5CA,KAAKC,EAAuC,EAAvCA,QAAQC,EAA+B,EAA/BA,IAAIC,EAA2B,EAA3BA,MAAMC,EAAqB,EAArBA,mBACxD,OACK,eAAClB,EAAD,CAASC,MAAM,aAAf,UACW,uCAAUa,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,mDAAsBC,EAAtB,U,ICPdC,E,4MAYJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAMLK,WAAa,SAAAC,GACb,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAMG,OAAOd,KAAOa,EAAUF,EAAMG,OAAOd,MAAQ,O,EAIxDe,mBAAqB,WACnB,OAAO,EAAKN,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAI3DW,gCAAkC,WAEhC,OAAOC,KAAKC,MAAO,EAAKT,MAAMN,KAAO,EAAKY,qBAAwB,M,4CAMpE,WAEE,MAA+BI,KAAKV,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBe,EAAOC,OAAOD,KAAKD,KAAKV,OAE1B,OACJ,qCACQ,cAAChB,EAAD,CACEC,QAAS0B,EACTzB,gBAAkBwB,KAAKT,aAIzB,cAACR,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,KAAKJ,qBACZR,mBAAoBY,KAAKH,2C,GA1DrBM,aAAZd,EAEGe,aAAe,CACpBhB,mBAAoB,GAgETC,QClEfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.02a57331.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <section>\r\n            <h2 className=\"title\" > {title}</h2>\r\n            {children}\r\n        </section>\r\n    ) \r\n}","import React from \"react\"\r\nimport Section from \"../Section/Section\"\r\n\r\n\r\nexport default function Feedback({ options, onLeaveFeedback }){\r\n\r\n    return (\r\n        <Section title=\"Please leave Feedback\">\r\n<>\r\n        {options.map((option, idx) => (\r\n        <button key={idx} type=\"button\"\r\n        name={option} onClick={onLeaveFeedback}\r\n\r\n        >{ option}</button>\r\n        ))}\r\n</>\r\n        </Section>\r\n          \r\n            \r\n               \r\n    \r\n    )\r\n}\r\n\r\n","\r\nimport React from \"react\";\r\nimport \"./statistics.css\"\r\nimport Section from \"../Section/Section\"\r\n\r\nexport default function Statistics({ good,neutral,bad,total,positivePercentage}) {\r\n    return (\r\n         <Section title=\"Statistics\">\r\n                    <p>Good: {good }</p>\r\n                    <p>Neutral: {neutral }</p>\r\n                    <p>Bad: {bad }</p>\r\n                    <p>Total: {total }</p>\r\n                    <p>Positive feedback:{positivePercentage}%</p>\r\n         </Section>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Feedback from './components/Feedback/Feedback';\r\nimport Statistics from \"./components/Statistics/Statistics\"\r\n\r\nclass App extends Component {\r\n\r\n  static defaultProps = {\r\n    positivePercentage: 0\r\n  };\r\n\r\n  static propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number\r\n  }\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n  \r\n  \r\n\r\n  \r\n    onFeedback = event => {\r\n    this.setState(prevState => ({\r\n      [event.target.name]: prevState[event.target.name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad\r\n  \r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    // const { good } = this.state.good;\r\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n\r\n\r\n   \r\n  render() {\r\n\r\n    const { good, neutral, bad } = this.state;\r\n    const keys = Object.keys(this.state);\r\n    \r\n        return (\r\n    <>\r\n            <Feedback\r\n              options={keys }\r\n              onLeaveFeedback={ this.onFeedback}\r\n            \r\n            />\r\n        \r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            /> \r\n    </>\r\n     \r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}